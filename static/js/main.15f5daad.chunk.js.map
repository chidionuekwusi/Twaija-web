{"version":3,"sources":["imgs/twaija_1.png","imgs/logo_.png","imgs/github.png","imgs/team.jpg","imgs/twaija_2.png","imgs/twaija_3.png","components/Intro/Intro.js","components/Outro/Outro.js","components/Features/Features.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Intro","react_default","a","createElement","id","className","alt","src","logo","href","twaija_image","React","Component","Outro","download","disabled","team","github","Features","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","content","map","x","t3","t2","t1","App","document","querySelectorAll","forEach","anchor","addEventListener","e","preventDefault","querySelector","getAttribute","scrollIntoView","behavior","components_Intro_Intro","components_Features_Features","components_Outro_Outro","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.15f5daad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/twaija_1.1d3c20a3.png\";","module.exports = __webpack_public_path__ + \"static/media/logo_.965c7a5b.png\";","module.exports = __webpack_public_path__ + \"static/media/github.9ac279f9.png\";","module.exports = __webpack_public_path__ + \"static/media/team.e8ae5bbd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/twaija_2.a1b05efa.png\";","module.exports = __webpack_public_path__ + \"static/media/twaija_3.28e8c5af.png\";","import React from \"react\";\nimport \"./style.scss\";\nimport twaija_image from \"../../imgs/twaija_1.png\";\nimport logo from \"../../imgs/logo_.png\";\n\nclass Intro extends React.Component {\n  render() {\n    return (\n      <article id=\"intro\" className=\"intro\">\n        <div className=\"hero\">\n          <img className=\"logo\" alt=\"logo\" src={logo} />\n          <a href=\"#download\" className=\"download-button\">\n            DOWNLOAD\n          </a>\n          <a href=\"#features\" className=\"download-button\">\n            FEATURES\n          </a>\n          <img\n            className=\"display-image\"\n            src={twaija_image}\n            alt=\"Introductory\"\n          />\n          <h1 className=\"title\">Twaija</h1>\n          <span className=\"subtitle\">The nigerian twitter client</span>\n        </div>\n      </article>\n    );\n  }\n}\n\nexport default Intro;\n","import React from \"react\";\nimport github from \"../../imgs/github.png\";\nimport team from \"../../imgs/team.jpg\";\nimport \"./style.scss\";\nclass Outro extends React.Component {\n  render() {\n    return (\n      <div id=\"download\" className=\"outro\">\n        <div className=\"outro-wrapper\">\n          <div className=\"download\">\n            <h2>Download</h2>\n            <div className=\"container\">\n              <a\n                href=\"https://github.com/chidionuekwusi/Twaija/releases/download/v1.0.0/Twaijav1.zip\"\n                download\n              >\n                For Windows\n              </a>\n              <a href=\"/#donwload\" disabled>\n                For Mac (Not available)\n              </a>\n            </div>\n          </div>\n          <div className=\"team\">\n            <img className=\"avatar\" alt=\"team avatar\" src={team} />\n            <h3 className=\"avatar-title\">Chidi Onuekwusi (superc)</h3>\n            <a\n              className=\"github-link\"\n              href=\"https://www.github.com/chidionuekwusi\"\n            >\n              <img className=\"github-avatar\" src={github} alt=\"github icon\" />\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Outro;\n","import React from \"react\";\nimport \"./style.scss\";\nimport t2 from \"../../imgs/twaija_2.png\";\nimport t1 from \"../../imgs/twaija_1.png\";\nimport t3 from \"../../imgs/twaija_3.png\";\n\nclass Features extends React.Component {\n  constructor(props) {\n    super(props);\n    this.content = [\n      \"Twitter feed\",\n      \"Display your mentions\",\n      \"User profiles\",\n      \"Themes\",\n      \"Notifications\"\n    ];\n  }\n  render() {\n    return (\n      <article id=\"features\" className=\"features\">\n        <div className=\"content\">\n          <div>\n            <h2 className=\"title\">What it can do</h2>\n            <ul className=\"list\">\n              {this.content.map(x => (\n                <li className=\"item\">{x}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n        <div className=\"gallery\">\n          <img className=\"pic3\" alt=\"pic3\" src={t3} />\n          <img className=\"pic1\" alt=\"pic1\" src={t2} />\n          <img className=\"pic2\" alt=\"pic2\" src={t1} />\n        </div>\n      </article>\n    );\n  }\n}\n\nexport default Features;\n","import React, { Component } from \"react\";\nimport Intro from \"./components/Intro\";\nimport Outro from \"./components/Outro\";\nimport Features from \"./components/Features\";\nimport \"./App.css\";\n\nclass App extends Component {\n  componentDidMount() {\n    document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\n      anchor.addEventListener(\"click\", function(e) {\n        e.preventDefault();\n\n        document.querySelector(this.getAttribute(\"href\")).scrollIntoView({\n          behavior: \"smooth\"\n        });\n      });\n    });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Intro />\n        <Features />\n        <Outro />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}